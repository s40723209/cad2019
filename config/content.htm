<h1><strong>Weeks</strong></h1>
<h2>week2~5</h2>
<p>week2</p>
<p>網路設定與建立cmsimde網站</p>
<p>1.下載<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件</a><a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">.7z</a><span> </span></p>
<p><span>2.建立自己的倉儲</span></p>
<p><span>3.網路proxy設定</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bl73noVMBFU" width="560"></iframe></p>
<p>week3</p>
<p>solvespace 編輯</p>
<p>1.<span>查驗 git 版本(git 2.13 版本以上)</span></p>
<p>2.<span>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</span></p>
<p><span>3.打開Y:\tmp\solvespace\extlib\angle\CMakeLists.txt (713和714要加#)</span></p>
<p><span>4.cd solvespace/extlib/libpng&gt;make build&gt;cd build</span></p>
<p><span>5.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release&gt;mingw32-make</span></p>
<p><span>6.回到solvespace&gt;make build&gt;cd build</span></p>
<p><span>7.執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release&gt;mingw32-make</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ePBXLz8hi1U" width="560"></iframe></p>
<p>week4</p>
<p><span>1.自主練習，編輯趕上之前的進度</span></p>
<h6><strong>week5</strong></h6>
<p>1.下載solvespace所需的dlls</p>
<p><span>2.分組討論做影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/awEdqt9qTsA" width="560"></iframe></span></p>
<h2><span>week6~9</span></h2>
<p><span>1.下載V-REP3、web_vrep2</span></p>
<p><span>2.畫一台兩輪車</span></p>
<p><span>3.操作vrep的兩輪車</span></p>
<p><span>兩輪車完成圖</span></p>
<p><span><img caption="false" height="391" src="/images/666(1).png" width="500"/></span></p>
<p><span>操作影片:</span></p>
<h6><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Ynv0_UAh-kw" width="560"></iframe></h6>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jy9UjaF6rZU" width="560"></iframe></p>
<h2>week10~14</h2>
<h2>week15~18</h2>
<h1><strong>About</strong></h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1><strong>Develop</strong></h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p><strong></strong></p>